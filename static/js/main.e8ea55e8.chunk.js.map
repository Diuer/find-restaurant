{"version":3,"sources":["component/List.js","App.js","serviceWorker.js","index.js"],"names":["List","this","props","list","location","name","price_level","rating","user_ratings_total","vicinity","hrefLink","photos","icon","lat","lng","className","Array","fill","map","item","index","key","undefined","href","target","React","App","centerMoved","bind","fetchPlaces","sortLists","filterLists","state","lists","mapCenter","filteredLists","isSorting","mapProps","center","setState","_mapProps","_map","google","maps","places","PlacesService","nearbySearch","LatLng","radius","rankby","type","results","status","PlacesServiceStatus","OK","length","place","push","geometry","sourceLists","markerLists","mapContainer","LatLngBounds","iconInfo","url","size","Size","origin","Point","anchor","scaledSize","title","position","extend","fitBounds","e","sortType","getAttribute","start","end","sortedLists","sort","a","b","value","filterType","parseInt","filter","array","zoom","clickableIcons","style","width","height","onReady","initialCenter","draggable","onDragend","disableDoubleClickZoom","maxZoom","drawMarkers","data-sort-type","onClick","data-filter-number","Component","GoogleApiWrapper","apiKey","libraries","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8ea55e8.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport './List.scss';\r\n\r\nclass List extends React.Component{\r\n    constructor(){\r\n        super()\r\n\r\n    }\r\n\r\n    render(){\r\n        const {location, name, price_level, rating, user_ratings_total, vicinity, photos, icon} = this.props.list\r\n        const hrefLink = `https://www.google.com.tw/maps/place/${location.lat},${location.lng}`\r\n\r\n        return (\r\n            <div className='list-block'>\r\n                {/* <img className='type-icon' src={icon}/> */}\r\n                <div className='user-comment'>\r\n                    <div className='comment-price'>\r\n                    {\r\n                        price_level !== 99 &&\r\n                        Array(price_level).fill().map((item, index)=>{\r\n                            return <i key={'rating'+index} className=\"fas fa-dollar-sign\"></i>\r\n                        })\r\n                    }\r\n                    </div>\r\n                    <div className='comment-score'>\r\n                    {\r\n                        rating !== false &&\r\n                        Array(5).fill().map((item, index)=>{\r\n                            return (rating >= index + 1) ? <i key={'rating'+index} className=\"fas fa-star\"></i> : <i key={'rating'+index} className=\"far fa-star\"></i>\r\n                        })\r\n                    }\r\n                    </div>\r\n                    <div className='comment-count'>\r\n                    {\r\n                        user_ratings_total !== undefined &&\r\n                        `共${user_ratings_total}人評論`\r\n                    }\r\n                    </div>\r\n                </div>\r\n                <p className='title'>{name}</p>\r\n                <p className='location'>\r\n                    <i className=\"fas fa-map-marker-alt\"></i>\r\n                    <a href={hrefLink} target='_blank'>\r\n                        {vicinity}\r\n                    </a>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List","import React from 'react';\nimport './App.scss';\nimport List from './component/List';\nimport { Map, GoogleApiWrapper, Marker} from 'google-maps-react';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n\n    this.centerMoved = this.centerMoved.bind(this)\n    this.fetchPlaces = this.fetchPlaces.bind(this)\n    this.sortLists = this.sortLists.bind(this)\n    this.filterLists = this.filterLists.bind(this)\n\n    this.state = {\n      lists: [],\n      mapCenter: {\n          lat: 25.048019,\n          lng: 121.519087\n      },\n      filteredLists: [],\n      isSorting: true //如果為篩選則為false\n    }\n  }\n\n\n  centerMoved(mapProps, map){\n    // 取地圖當前中心座標\n    let mapCenter = {\n      lat: map.center.lat(),\n      lng: map.center.lng()\n    }\n    \n    this.setState({\n      mapCenter\n    })\n\n    this.fetchPlaces(mapProps, map, mapCenter)\n  }\n\n  fetchPlaces(mapProps, map){\n\n    this._mapProps = mapProps\n    this._map = map\n\n    const {google} = mapProps\n    const {mapCenter} = this.state\n\n    let mapPlacesService = new google.maps.places.PlacesService(map)\n    mapPlacesService.nearbySearch({\n      location: new google.maps.LatLng(mapCenter.lat, mapCenter.lng),\n      radius: '1000', // 1公里\n      rankby : 'distance',\n      type: ['restaurant']\n    },(results, status)=>{\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\n        let lists=[]\n        for (let index = 0; index < results.length; index++) {\n          let place = results[index];\n          lists.push({ \n            location: {\n              lat: place.geometry.location.lat(),\n              lng: place.geometry.location.lng()\n            },\n            name: place.name,\n            price_level: (place.price_level !== undefined) ? place.price_level : 99,\n            rating: (place.rating !== undefined) ? place.rating : false,\n            user_ratings_total: (place.user_ratings_total !== undefined) ? place.user_ratings_total : '',\n            vicinity: place.vicinity,\n            photos: place.photos,\n            icon: place.icon\n          })\n        }\n        this.setState({\n            lists,\n            isSorting: true\n        })\n      }\n    })\n  }\n\n  drawMarkers(sourceLists){\n    let markerLists = []\n    let mapContainer = new this._mapProps.google.maps.LatLngBounds();\n    sourceLists.map((item, index)=>{\n      const iconInfo = {\n        url: item.icon,\n        size: new this._mapProps.google.maps.Size(70, 70),\n        origin: new this._mapProps.google.maps.Point(0, 0),\n        anchor: new this._mapProps.google.maps.Point(17, 34),\n        scaledSize: new this._mapProps.google.maps.Size(25, 25)\n      }\n      markerLists.push(<Marker key={'marker'+index} title={item.name} icon={iconInfo} position = {{lat: item.location.lat, lng: item.location.lng }}/>)\n      mapContainer.extend({lat: item.location.lat, lng: item.location.lng })\n    })\n    \n    if(sourceLists.length == 0){ // 避免篩選到沒資料時地圖中心亂跑\n      const {mapCenter} = this.state\n      mapContainer.extend({lat: mapCenter.lat, lng: mapCenter.lng})\n    }\n\n    this._map.fitBounds(mapContainer)\n\n    return markerLists\n  }\n\n  sortLists(e){\n    const sortType = (e.target.getAttribute('data-sort-type') === 'asc')? {start: 1, end: -1} : {start: -1, end: 1}\n    let {sortedLists} = this.state.lists\n\n    sortedLists = sortedLists.sort(function (a, b) {\n      return a[e.target.value] > b[e.target.value] ? sortType.start : sortType.end\n    })\n\n    this.setState({\n      lists: sortedLists,\n      isSorting: true\n    })\n  }\n\n  filterLists(e){\n    const filterType = parseInt(e.target.getAttribute('data-filter-number'))\n    let {sortedLists} = this.state.lists\n    sortedLists = sortedLists.filter((item, index, array)=>{\n      return (e.target.value === 'price_level') ? item[e.target.value] === filterType : item[e.target.value] >= filterType\n    })\n\n    this.setState({\n      filteredLists: sortedLists,\n      isSorting: false\n    })\n  }\n\n  render(){\n\n    const {lists, filteredLists, isSorting, mapCenter} = this.state\n    const mapStyles = {\n      width: 'calc(100% - 350px)',\n      height: '100vh'\n    }\n\n    return (\n      <div className='App'>\n        <Map\n          className = 'map-block'\n          google = {this.props.google}\n          zoom = {13}\n          clickableIcons = {true}\n          style = {mapStyles}\n          onReady={this.fetchPlaces}\n          initialCenter = {{ lat: mapCenter.lat, lng: mapCenter.lng }}\n          position = {{ lat: mapCenter.lat, lng: mapCenter.lng }}\n          draggable = {true}\n          onDragend = {this.centerMoved}\n          disableDoubleClickZoom = {true}\n          maxZoom = {16}\n        >\n        {\n          (lists.length > 0) && this.drawMarkers((this.state.isSorting ? this.state.lists : this.state.filteredLists))\n        }\n        </Map>\n        <div className='lists-block'>\n          <div className='settings'>\n            <button data-sort-type='asc' value='default' onClick={this.sortLists}>自然排序</button>\n            <button data-sort-type='asc' value='price_level' onClick={this.sortLists}>價錢等級低者優先</button>\n            <button data-sort-type='desc' value='rating' onClick={this.sortLists}>評分高者優先</button>\n            <button data-sort-type='desc' value='user_ratings_total' onClick={this.sortLists}>多人評論者優先</button>\n            <button data-filter-number={3} value='rating' onClick={this.filterLists}>顯示三星以上評價</button>\n            <button data-filter-number={4} value='rating' onClick={this.filterLists}>顯示四星以上評價</button>\n            <button data-filter-number={5} value='rating' onClick={this.filterLists}>顯示五星評價</button>\n            <button data-filter-number={0} value='price_level' onClick={this.filterLists}>顯示最低價位</button>\n            <button data-filter-number={1} value='price_level' onClick={this.filterLists}>顯示中低價位</button>\n            <button data-filter-number={2} value='price_level' onClick={this.filterLists}>顯示中價位</button>\n            <button data-filter-number={3} value='price_level' onClick={this.filterLists}>顯示中高價位</button>\n            <button data-filter-number={4} value='price_level' onClick={this.filterLists}>顯示最高價位</button>\n          </div>\n          <div className='content'>\n          {\n            (isSorting ? lists : filteredLists).map((list, index)=>{\n              return <List key={'list'+index} list={list}/>\n            })\n          }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GoogleApiWrapper({\n  // apiKey: '',\n  apiKey: 'AIzaSyCUxzgZX2YodxqBWnuOOxhz8Y5IfWHYGfw',\n  libraries: ['places']\n})(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}